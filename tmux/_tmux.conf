# cat <<__DATA__ >/dev/null

set -g prefix C-space
unbind C-b
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key    -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key    -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind '"' split-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'

set -g status-interval 1
set-option -g status-right "#(cut -c3- ~/.tmux.conf | sh -s get_ssid_tmux) #(cut -c3- ~/.tmux.conf | sh -s get_battery) %Y/%m/%d %H:%M:%S"
set-option -g status-right-length 100
set-option -g status-left "[#S]"
set-option -g status-left-length 60

# __DATA__
#
# function get_ssid_tmux() {
#   airport_path="/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport"
#
#   if air_info=($(eval "$airport_path" -I | grep -E "^ *(agrCtlRSSI|state|SSID):" | awk '{print $2}')) ; then
#     rssi=${air_info[0]}
#     state=${air_info[1]}
#     ssid=${air_info[2]}
#     case "$state" in
#       "running" )
#         signals=(▁ ▂ ▄ ▆ █)
#         signal=""
#         rssi_=$(expr 5 - ${rssi} / -20)
#         for ((i=0; i < $rssi_; i++ )); do
#           signal="${signal}${signals[$i]}"
#         done
#         airport_=" #[underscore]${ssid}#[default] | ${signal} "
#       ;;
#       "init"    ) airport_="#[fg=yellow] ... " ;;
#       *         ) airport_="#[fg=red] ✘  " ;;
#     esac
#     echo "|#[default]${airport_}|#[default] "
#   fi
# }
#
# function get_battery() {
#   if battery_info=$(/usr/bin/pmset -g ps | awk '{ if (NR == 2) print $2 " " $3 }' | sed -e "s/;//g" -e "s/%//") ; then
#     battery_quantity=$(echo $battery_info | awk '{print $2}')
#     if [[ $(/usr/bin/pmset -g ps | awk '{if(NR==2)print $4}') = "discharging;" ]]; then
#       battery="$battery_quantity% #[default]"
#     elif (( $battery_quantity < 16 )); then
#       battery="$battery_quantity% #[default]"
#     else
#       battery="★ $battery_quantity%★ #[default]"
#     fi
#     echo $battery
# 	fi
# }
#
# $1
