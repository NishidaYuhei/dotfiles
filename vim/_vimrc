"========== START functions =========="
function! ZenkakuSpace()
    highlight ZenkakuSpace cterm=reverse ctermfg=DarkMagenta gui=reverse guifg=DarkMagenta
endfunction

command! -nargs=* Jump call Jump(<f-args>)
function! Jump(line, char)
  execute 'normal ' . a:line . 'G'
  execute 'normal f' . a:char
endfunction
"========== END functions =========="

"========== START default settings =========="
let $LANG = 'en_US'
let g:python3_host_prog = expand('/usr/local/bin/python3.7')
let $BASH_ENV = '~/dotfiles/bash/.bash_vim'

set belloff=all
set encoding=utf-8
set spell
set spelllang=en,cjk
set langmenu=en_US
set clipboard+=unnamed
set fileencoding=utf-8
set fileencodings=ucs-boms,utf-8,euc-jp,cp932
set fileformats=unix,dos,mac
set ambiwidth=double
set laststatus=2
set showmode
set showcmd
set ruler
set wildmenu
set history=5000
set expandtab
set tabstop=2
set softtabstop=2
set autoindent
set smartindent
set shiftwidth=2
set incsearch
set ignorecase
set smartcase
set hlsearch
set number
set cursorline
set list
set listchars=tab:»-,trail:-,nbsp:%,eol:↲
set autowrite

filetype plugin indent on
highlight Normal ctermbg=none

scriptencoding utf-8

autocmd BufRead,BufNewFile *.md set filetype=markdown
autocmd InsertLeave * set nopaste
autocmd QuickFixCmdPost *grep* cwindow

highlight SpecialKey ctermfg=darkmagenta

if has('syntax')
    augroup ZenkakuSpace
        autocmd!
        autocmd ColorScheme       * call ZenkakuSpace()
        autocmd VimEnter,WinEnter * match ZenkakuSpace /　/
    augroup END
    call ZenkakuSpace()
endif

" git commit 時に差分を表示する
autocmd FileType gitcommit DiffGitCached | wincmd x | resize 10

"========== END default settings =========="

"========== START key binds =========="
noremap <C-n> :cnext<CR>
noremap <C-p> :cprevious<CR>
noremap <C-_> :split<CR>
noremap <C-_><C-_> :vsplit<CR>

nnoremap <leader>d :<C-u>Denite file_rec<CR>
nnoremap <leader>f :<C-u>Jump 
nnoremap <leader>/ :<C-u>Ag 
nnoremap <leader>c :<C-u>cclose<CR>

tnoremap <C-[> <C-w><S-n>
"========== END key binds =========="

"========== START vim plugins settings =========="
let s:vim_plug_file = $HOME.'/.vim/autoload/plug.vim'
let s:vim_plug_dir = $HOME.'/.vim/plugged'
if !filereadable(s:vim_plug_file)
  echo 'vim-plug is not installed...'
  if input('Would you like to install vim-plug yes or no?') == "yes"
    call system('curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim')
  endif
else
  call plug#begin(s:vim_plug_dir)
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
  Plug 'bronson/vim-trailing-whitespace'
  Plug 'rking/ag.vim'
  Plug 'vim-airline/vim-airline'
  Plug 'SirVer/ultisnips'
  Plug 'plasticboy/vim-markdown'
  Plug 'kannokanno/previm'
  Plug 'fatih/vim-go'
  Plug 'tpope/vim-fugitive'
  Plug 'Shougo/denite.nvim'
  Plug 'editorconfig/editorconfig-vim'
  Plug 'mattn/emmet-vim'
  Plug 'w0rp/ale'
  Plug 'tpope/vim-abolish'
  Plug 'airblade/vim-gitgutter'
  Plug 'zchee/deoplete-go'
  Plug 'elzr/vim-json'
  Plug 'jacoborus/tender.vim'
  Plug 'hashivim/vim-terraform'
  call plug#end()

  set t_Co=256
  set background=dark
  colorscheme tender
  syntax on

  call denite#custom#map('insert', '<C-n>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('insert', '<C-p>', '<denite:move_to_previous_line>', 'noremap')
  call denite#custom#map('insert', '<C-_>', '<denite:do_action:split>', 'noremap')
  call denite#custom#map('insert', '<C-_><C-_>', '<denite:do_action:vsplit>', 'noremap')

  let g:airline_theme='tender'
  let g:airline_section_a = airline#section#create(['mode','','branch'])
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#show_buffers = 0
  let g:airline#extensions#tabline#tab_nr_type = 1
  let g:airline#extensions#tabline#fnamemod = ':t'

  let g:vim_json_syntax_conceal = 0

  let g:vim_markdown_folding_disabled = 1

  let g:deoplete#enable_at_startup = 1

  let g:go_list_type = 'quickfix'
  function! s:build_go_files()
      let l:file = expand('%')
      if l:file =~# '^\f\+_test\.go$'
          call go#test#Test(0, 1)
      elseif l:file =~# '^\f\+\.go$'
          call go#cmd#Build(0)
      endif
  endfunction
  let g:go_fmt_command = 'goimports'
  let g:go_textobj_include_function_doc = 0
  let g:go_fmt_fail_silently = 1
  let g:go_addtags_transform = 'camelcase'
  let g:go_highlight_types = 1
  let g:go_highlight_fields = 1
  let g:go_highlight_functions = 1
  let g:go_highlight_methods = 1
  let g:go_highlight_operators = 1
  let g:go_highlight_extra_types = 1
  let g:go_highlight_build_constraints = 1
  let g:go_metalinter_enabled = ['vet', 'golint', 'errcheck']
  let g:go_metalinter_autosave = 1
  let g:go_metalinter_autosave_enabled = ['vet', 'golint']
  let g:go_metalinter_deadline = '5s'
  let g:go_def_mode = 'godef'
  let g:go_decls_includes = 'func,type'
  let g:go_auto_type_info = 1
  set updatetime=100
  let g:go_auto_sameids = 1
  let g:go_gocode_unimported_packages = 1

  let g:terraform_align = 1
  let g:terraform_fold_sections = 1
  let g:terraform_remap_spacebar = 1
  let g:terraform_fmt_on_save = 1
endif
"========== END vim plugins settings =========="
